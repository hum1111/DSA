1 : Reverse a string
#include<stdio.h>
#include<conio.h>
void main(){
	char str[1000],*ptr;
	int i ,len;
	clrscr();
	printf("Enter a String ");
	gets(str);
	ptr=str;
	for(i=0;i<1000;i++)
	{
		if(*ptr=='\0')
		break;
		ptr++;
	}
	len=i;
	ptr--;
	printf("Reversed String ");
	for(i=len;i>0;i--)
	{
		printf("%c",*ptr--);

	}
	getch();
}




2 : Search an element in 2D-array
#include<stdio.h>
#include<conio.h>
void main(){
	int a[5][5],i,j,m,n,item,f=0;
	clrscr();
	printf("\n Enter the no rows and column");
	scanf("%d%d",&m,&n);
	printf("\n ENter the elements");
	for(i=0;i<m;i++)
		for(j=0;j<n;j++){
			scanf("%d",&a[i][j]);

		}
		printf("\n Enter the element to be searched");
		scanf("%d",&item);
		for(i=0;i<m;i++)
		{
			for(j=0;j<n;j++)
			{
				if(a[i][j]==item)
				{
					f=1;
					break;
				}
			}
		}

		if(f==0)
		printf("\n Emlenet not Found ");
		else
		printf("\n Element is found ");
		getch();
}




3 : Pattern Matching
#include<stdio.h>
#include<conio.h>
#include<string.h>
void main(){

   char p[80]={"bab"};
   char t[80]={"aabbbabb"};
   int r,s,k,l,max,index;
   clrscr();
   r=strlen(p);
   s=strlen(t);
   k=0;
   max=s-r;
   while(k<=max)
   {
	for(l=0;l<r;l++)
	if(p[l]!=t[k+l])
	break;
	if(l==r)
	{

		index=k;
		break;
	}
	else
		k=k+1;

   }
       if(k>max)
       index=-1;
       printf("p= %s",p);
       printf("\n t= %s ",t);

       if(index!=-1)
       printf("\n index of p in t is %d ",index);
       else
       printf("\n p dosnot exist in t ");
       getch();
   }




4 : Append two Arrays
#include<stdio.h>
#include<conio.h>
void main(){
   int arr1[30],arr2[30],res[60];
   int i,j,k,n1,n2;
   clrscr();
   printf("\n Enter the no elmemenst in first array");
   scanf("%d",&n1);
   for(i=0;i<n1;i++)
   {
	scanf("%d",&arr1[i]);


   }
   printf("\n Enter the  no of lements odf 2nd array");
   scanf("%d",&n2);
   printf("Enter the elements");

   for(i=0;i<n2;i++)
   {
	 scanf("%d",&arr2[i]);
   }
   i=0;
   j=0;
   k=0;
   while(i<n1 && j<n2)
   {
	if(arr1[i]<=arr2[j])
	{
		res[k]=arr1[i];
		i++;
		k++;
	}
	else
	{
		res[k]=arr2[j];
		k++;
		j++;
	}
   }
   while(i<n1)
   {
	res[k]=arr1[i];
	i++;
	k++;
   }
   while(j<n2)
   {
	res[k]=arr2[j];
	k++;
	j++;
   }
   printf("\n append array is : ");
   for(i=0;i<n1+n2;i++)
   printf("%d",res[i]);
   getch();
}




5 : Single Linked List
#include<stdio.h>
#include<conio.h>
void main(){
       int ch,item;
       struct node
       {
		int data;
		 struct node*link;

       };
       typedef struct node node;
       node*start=NULL,*ptr,*temp;
       clrscr();
       while(1)
       {
	printf("\n 1-> add \n 2->display \n 3->exit");
	printf("\n enter you choice");
	scanf("%d",&ch);
	switch(ch)
	{
		case 1:
			printf("\n enter the no : ");
			scanf("%d",&item);
			temp=(node*)malloc(sizeof(node));
			temp->data=item;
			temp->link=NULL;
			if(start==NULL)
				start=temp;
			else
			{
				ptr=start;
				while(ptr->link!=NULL)
					ptr=ptr->link;
					ptr->link=temp;
			}
			break;
		case 2:
			ptr=start;
			while(ptr!=NULL)
			{
				printf("%d ",ptr->data);
				ptr=ptr->link;

			}
			break;
		 case 3:
			exit(0);
			break;
	}
       }
   getch();
}




6 : Delete given node from single linked list
#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
void main(){
	int item,c;
	int ch,f=0;
	struct node{
		int data;
		struct node*link;

	};
	typedef struct node node;
	node*start=NULL,*ptr,*temp,*ptr1;
	clrscr();
	while(1){
	       printf("\n 1->create 2->disply 3-> delete 4->exit ");

	       scanf("%d",&ch);
	       switch(ch)
	       {
			case 1:
				temp=(node*)malloc(sizeof(node));
				printf("\n enter the item :");
				scanf("%d",&c);
				temp->data=c;
				temp->link=start;
				start=temp;
				break;
			case 2:
				ptr=start;
				while(ptr!=NULL)
				{
					printf("%d",ptr->data);
					ptr=ptr->link;
				}
				break;
			case 3:
				printf("enter the elemnts to be deleted : ");
				fflush(stdin);
				scanf("%d",&item);
				ptr=start;
				ptr1=NULL;
				while(ptr!=NULL)
				{
					if(ptr->data!=item)
					{
						ptr1=ptr;
						ptr=ptr->link;
					}
					else
					{
						f=1;
						if(ptr1==NULL)
						  start=ptr->link;
						else
						  ptr1->link=ptr->link;
						free(ptr);
						break;
					}
				}
				if(f==0)
				printf("elements not found");
				break;
			 case 4:
				exit(0);
				break;
	       }
	}
}




7 : Stack by using Array
#include<stdio.h>
#include<conio.h>
int stack[10],top=-1,n;
void main(){
    int ch,i;
    void push();
    void pop();
    void disp();
    clrscr();
    while(1)
    {
	printf("\n 1->push 2-> pop 3->display 4->exit \n");
	printf("ENter your Choice: ");
	scanf("%d",&ch);
	switch(ch)
	{
		case 1:
			push();
			break;
		case 2:
			pop();
			break;
		case 3:
			disp();
			break;
		case 4:
			exit(0);
	}
    }
}
void push()
{
	int item;
	printf("\n enter the item ");
	scanf("%d",&item);
	if(top==9)
	{
		printf("\n stack overflow ");

	}
	else
	{
		top=top+1;
		stack[top]=item;
	}

}
void pop()
{
	if(top==-1)
	{
		printf("\n Stack Undeflow ");
	}
	else
		top=top-1;


}
void disp()
{
	int i;
	for(i=0;i<=top;i++)
	{
	     printf("%d ",stack[i]);

	}
}




8 : Queue using array
#include<stdio.h>
#include<conio.h>
int queue[10],rear=-1,front=-1;
void main()
{
	int ch;
	void enqueue();
	void dequeue();
	void disp();
	clrscr();
	while(1)
	{
		printf("\n 1-> enqueue \n 2->deqqueue\n 3->display \n 4->exit \n");
		printf("Enter your choice");
		scanf("%d",&ch);
		switch(ch)
		{
			case 1:
			      enqueue();
			      break;
			case 2:
				dequeue();
				break;
			case 3:
				disp();
				break;
			case 4:
				exit(0);
		}
	}
}
void enqueue()
{
	int item;
	printf("\n Ebter the item ");
	scanf("%d",&item);
	if(rear==9)
	{
		printf("\n queue over flow");
	}
	else if(rear==-1)
	{
		front=rear=0;
		queue[rear]=item;
	}
	else
	{
		rear=rear+1;
		queue[rear]=item;
	}
}
void dequeue()
{
	 if(front==-1)
	 {
		printf("\n queue under flow");
	 }
	 else if(front==rear)
	 {
		front=rear=-1;
	 }
	 else
	 {
		front=front+1;
	 }
}

void disp()
{
	int i;

	for(i=front;i<=rear;i++)
	{
		printf("%d",queue[i]);
	}
}




9 : Linear/sequencial search
#include<stdio.h>
#include<conio.h>
void main()
{
	int a[10],n,item,i,f=0;
	clrscr();
	printf("Enter the value of n :");
	scanf("%d",&n);
	printf("Enter the elements ");
	for(i=0;i<n;i++)
	scanf("%d",&a[i]);
	printf(" \n Enter the item to search ");
	scanf("%d",&item);
	for(i=0;i<n;i++)
	{
		if(a[i]==item)
		{
			f=1;
			break;
		}
	}
	if(f==1)
		printf(" \n Elements found in location %d " ,i);
	else
		printf("\n Element not found " );
	getch();
}




10 : Binary search
#include<stdio.h>
#include<conio.h>
void main(){
	int a[10],n,item,i,f=0,beg=0,end,mid;
	clrscr();
	printf("Enter the value of n ");
	scanf("%d",&n);
	printf("\n Enter the arry elemnts ");
	for(i=0;i<n;i++)
	scanf("%d",&a[i]);
	printf(" \n Enter the item to search ");
	scanf("%d",&item);
	end=n-1;
	while(beg<=end)
	{
		mid=beg+end/2;
		if(a[mid]==item)
		{
			f=1;
			break;

		}
		else if(item<a[mid])
			end=mid-1;
		else
			beg=mid+1;
	}
	if(f==1)
		printf(" \n Element found in location %d ",mid);
	else
		printf("\n Elemnt not found ");

	getch();
}




11 : selection sort
#include<stdio.h>
#include<conio.h>
void main(){
	int a[10],n,i,j,t,min,pos;
	clrscr();
	printf(" ENter the vaue ");
	scanf("%d",&n);
	printf("\n Enter the array Elements ");
	for(i=0;i<n;i++)
		scanf("%d",&a[i]);
		for(i=0;i<n;i++)
		{
			min=a[i];
			pos=i;
			for(j=i+1;j<n;j++)
			{
				if(a[j]<min)
				{
					min=a[i];
					pos=j;
				}
			}
			t=a[i];
			a[i]=a[pos];
			a[pos]=t;
		}
		printf("Sorted Elemntrs Are : ");
		for(i=0;i<n;i++)
			printf("\n %d",a[i]);
		getch();
}




12 : exchange sort
#include<stdio.h>
#include<conio.h>
void main()
{
       int a[50],i,j,n,t;
       clrscr();
       printf("Enter the no of elments ");
       scanf("%d",&n);
       printf("Enter the elemts " );

       for(i=0;i<n;i++)
       {
		scanf("%d",&a[i]);
	}
	printf(" Before bubble sorting ");
	for(i=0;i<n;i++)
		printf("%d \t \n ",a[i]);
	for(i=0;i<n-1;i++)
	{
		for(j=i+1;j<n;j++)
		{
			if(a[i]>a[j])
			{
				t=a[i];
				a[i]=a[j];;
				a[j]=t;
			}
		}
	}
	printf(" after Bubble Sorting ");
	for(i=0;i<n;i++)
		printf("%d \t",a[i]);
	getch();
}




13 : insertion sort 
#include<stdio.h>
#include<conio.h>
void main()
{
	int a[10],n,i,j,t;
	clrscr();
	printf("Enter the Arrau\y Elements ");
	scanf("%d",&n);
	printf("\n enter the Elements ");
	for(i=0;i<n;i++)
		scanf("%d",&a[i]);
	for(i=1;i<n;i++)
	{
		t=a[i];
		j=i-1;
		while(t<a[j]&& j>=0)
		{
			a[j+1]=a[j];
			j=j-1;
		}
		a[j+1]=t;
	}
	printf("Sorted Elemnts are :");
	for(i=0;i<n;i++)
		printf("\n%d",a[i]);
	getch();
}
